version: "3.8"

services:
  api:
    container_name: my-aspnet-api
    image: my-aspnet-api:latest
    build:
      context: ./Server
      dockerfile: Dockerfile
    ports:
      - "5179:8080"
    depends_on:
      - mongo
      - chat-redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongo:27017
      - MongoDB__DatabaseName=AuthDb
      - Redis__ConnectionString=chat-redis:6379
    networks:
      - app-network
 
    
  vite:
    container_name: vite-app
    build:
      context: ./Web
      dockerfile: ./Dockerfile
    ports:
      - "5173:8080" # for dev
      # - "80:80"    # for prod if using nginx
  
    environment:
      - NODE_ENV=development
    networks:
      - app-network
    

  
  mongo:
    image: mongo:8
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_DATABASE: AuthDb
    networks:
      - app-network

  chat-redis:
    container_name: chat-redis
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: secret
    networks:
      - app-network
  
  redis-insight:
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "5540:5540"
    volumes:
      - redis-insight:/data
    networks:
      - app-network

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"   
    volumes:
      - ollama-models:/root/.ollama  
    restart: unless-stopped
    environment:
      - OLLAMA_MODELS=/root/.ollama
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '6.0'
          memory: 16g
        reservations:
          cpus: '2.0'
          memory: 4g
volumes:
  mongo-data:
  redis-insight:
  ollama-models:
 
networks:
  app-network:
    driver: bridge